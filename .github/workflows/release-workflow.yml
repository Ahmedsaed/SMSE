name: Create Release

on:
  workflow_run:
    workflows: ["Build Project"]
    types:
      - completed

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: dist-py*
        merge-multiple: true
        path: combined-dist
        
    - name: Get package version
      id: get_version
      run: |
        # Extract version from pyproject.toml or setup.py
        if [ -f "pyproject.toml" ]; then
          VERSION=$(grep -m 1 'version = ' pyproject.toml | cut -d '"' -f 2)
        else
          VERSION=$(grep -m 1 'version=' setup.py | cut -d '"' -f 2)
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Release Notes
      id: release_notes
      run: |
        cat << EOF > release_notes.md
        # Release v${{ steps.get_version.outputs.version }}
        
        ## Installation Instructions
        
        Install the latest version:
        \`\`\`bash
        pip install "${{ github.event.repository.name }} @ https://github.com/${{ github.repository }}/releases/latest/download/${{ github.event.repository.name }}-${{ steps.get_version.outputs.version }}-py3-none-any.whl"
        \`\`\`
        
        Install this specific version:
        \`\`\`bash
        pip install "${{ github.event.repository.name }} @ https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.version }}/${{ github.event.repository.name }}-${{ steps.get_version.outputs.version }}-py3-none-any.whl"
        \`\`\`
        
        ## Available Python Versions
        This release includes builds for:
        - Python 3.10
        - Python 3.11
        - Python 3.12
        - Python 3.13
        
        ## What's New
        <!-- Add release notes here -->
        EOF
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: Release v${{ steps.get_version.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: combined-dist/*
        tag_name: v${{ github.run_number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}